swagger: '2.0'
info:
  title: API
  description: API for the project.
  version: v1
host: localhost:8000
schemes:
- http
basePath: /api
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Basic:
    type: basic
security:
- Basic: []
paths:
  /auctions:
    get:
      operationId: auctions_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Auction'
      tags:
      - auctions
    post:
      operationId: auctions_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/AuctionCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Auction'
      tags:
      - auctions
    parameters: []
  /auctions/{id}:
    get:
      operationId: auctions_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Auction'
      tags:
      - auctions
    put:
      operationId: auctions_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Auction'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Auction'
      tags:
      - auctions
    patch:
      operationId: auctions_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Auction'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Auction'
      tags:
      - auctions
    delete:
      operationId: auctions_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - auctions
    parameters:
    - name: id
      in: path
      description: Auction ID
      required: true
      type: string
      format: uuid
  /auth/login:
    post:
      operationId: auth_login
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserLogin'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Token'
      tags:
      - auth
    parameters: []
  /auth/register:
    post:
      operationId: auth_register
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/UserCreate'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Token'
      tags:
      - auth
    parameters: []
  /customers:
    get:
      operationId: customers_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
      tags:
      - customers
    post:
      operationId: customers_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Customer'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Customer'
      tags:
      - customers
    parameters: []
  /customers/{id}:
    get:
      operationId: customers_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Customer'
      tags:
      - customers
    put:
      operationId: customers_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Customer'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Customer'
      tags:
      - customers
    patch:
      operationId: customers_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Customer'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Customer'
      tags:
      - customers
    delete:
      operationId: customers_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - customers
    parameters:
    - name: id
      in: path
      description: A unique integer value identifying this customer.
      required: true
      type: integer
definitions:
  Auction:
    required:
    - title
    - description
    - starting_price
    - price
    - start_date
    - end_date
    - seller
    type: object
    properties:
      id:
        title: Id
        description: Auction ID
        type: string
        format: uuid
        readOnly: true
      title:
        title: Title
        description: Product name
        type: string
        maxLength: 100
        minLength: 1
      description:
        title: Description
        description: Product description
        type: string
        minLength: 1
      starting_price:
        title: Starting price
        description: Starting price
        type: string
        format: decimal
      price:
        title: Price
        description: Final price
        type: string
        format: decimal
      start_date:
        title: Start date
        description: Auction start date
        type: string
        format: date-time
      end_date:
        title: End date
        description: Auction end date
        type: string
        format: date-time
      winner:
        title: Winner
        description: Auction winner
        type: integer
      seller:
        title: Seller
        description: Auction seller
        type: integer
  AuctionCreate:
    required:
    - title
    - description
    - starting_price
    - price
    - start_date
    - end_date
    type: object
    properties:
      title:
        title: Title
        description: Product name
        type: string
        maxLength: 100
        minLength: 1
      description:
        title: Description
        description: Product description
        type: string
        minLength: 1
      starting_price:
        title: Starting price
        description: Starting price
        type: string
        format: decimal
      price:
        title: Price
        description: Final price
        type: string
        format: decimal
      start_date:
        title: Start date
        description: Auction start date
        type: string
        format: date-time
      end_date:
        title: End date
        description: Auction end date
        type: string
        format: date-time
  UserLogin:
    required:
    - email
    - password
    type: object
    properties:
      email:
        title: Email
        description: Email of the user
        type: string
        format: email
        minLength: 1
      password:
        title: Password
        description: Password of the user
        type: string
        minLength: 1
  User:
    description: User object
    required:
    - first_name
    - last_name
    - email
    type: object
    properties:
      first_name:
        title: First name
        type: string
        maxLength: 150
      last_name:
        title: Last name
        type: string
        maxLength: 150
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
  Token:
    required:
    - user
    - key
    type: object
    properties:
      user:
        $ref: '#/definitions/User'
      key:
        title: Key
        type: string
        maxLength: 40
        minLength: 1
  UserCreate:
    required:
    - first_name
    - last_name
    - email
    - password
    type: object
    properties:
      first_name:
        title: First name
        type: string
        maxLength: 150
      last_name:
        title: Last name
        type: string
        maxLength: 150
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      password:
        title: Password
        type: string
        maxLength: 128
        minLength: 1
  Customer:
    required:
    - document_number
    - phone_number
    - address
    - user
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      document_type:
        title: Document type
        description: Customer document type
        type: string
        enum:
        - DNI
        - RUC
        - PASSPORT
      document_number:
        title: Document number
        description: Customer document number
        type: string
        maxLength: 15
        minLength: 1
      birth_date:
        title: Birth date
        description: Customer birth date
        type: string
        format: date
        x-nullable: true
      phone_number:
        title: Phone number
        description: Customer phone number
        type: string
        maxLength: 10
        minLength: 1
      address:
        title: Address
        description: Customer address
        type: string
        maxLength: 100
        minLength: 1
      cci:
        title: Cci
        description: Customer CCI number
        type: string
        maxLength: 24
        x-nullable: true
      bank_name:
        title: Bank name
        description: Customer bank name
        type: string
        maxLength: 32
        x-nullable: true
      type:
        title: Type
        description: Customer type
        type: string
        enum:
        - BUYER
        - SELLER
      user:
        title: User
        description: Associated user
        type: integer
